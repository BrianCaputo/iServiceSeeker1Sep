@inherits LayoutComponentBase
@using iServiceSeeker1Sep.Data
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>
@code {
    

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if (appUser is not null && !appUser.IsProfileComplete)
            {
                // Prevent a redirect loop
                var currentUri = NavigationManager.Uri;
                if (!currentUri.Contains("/complete-profile") && !currentUri.Contains("/Account/Logout"))
                {
                    NavigationManager.NavigateTo("/complete-profile");
                }
            }
        }
    }
 
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    // Use OnAfterRenderAsync for navigation checks
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Only run this logic on the first render
        if (firstRender)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity.IsAuthenticated)
            {
                var appUser = await UserManager.GetUserAsync(user);

                // Now it's safe to navigate
                if (appUser != null && !appUser.IsProfileComplete)
                {
                    // Check to prevent a redirect loop if we are already on the target page
                    if (new Uri(NavigationManager.Uri).AbsolutePath != "/complete-profile")
                    {
                        NavigationManager.NavigateTo("/complete-profile");
                    }
                }
            }
        }
    }
}